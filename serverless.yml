service: dynamodb-crud-api
provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: ap-south-1
  environment:
    DYNAMODB_TABLE_NAME: ${self:custom.postsTableName}
custom:
  postsTableName: employee-portal-table-${self:provider.stage}
plugins:
  - serverless-iam-roles-per-function
functions:
  getPost:
    handler: api.getPost
    name: get-employee
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employee/{empId}
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:GetItem"
        Resource: !GetAtt PostsTable.Arn
  createPost:
    handler: api.createPost
    name: create-employee
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employee
          method: POST
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:PutItem"
        Resource: !GetAtt PostsTable.Arn
  updatePost:
    handler: api.updatePost
    name: update-employee
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employee/{empId}
          method: PUT
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:UpdateItem"
        Resource: !GetAtt PostsTable.Arn
  deletePost:
    handler: api.deletePost
    name: delete-employee
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employee/{empId}
          method: DELETE
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:DeleteItem"
        Resource: !GetAtt PostsTable.Arn
  getAllPosts:
    handler: api.getAllPosts
    name: get-all-employees
    memorySize: 128 # mb
    timeout: 5 # seconds
    events:
      - http:
          path: employees
          method: GET
    iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Scan"
        Resource: !GetAtt PostsTable.Arn
resources:
  Resources:
    PostsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.postsTableName}
        AttributeDefinitions:
          - AttributeName: empId
            AttributeType: S
        KeySchema:
          - AttributeName: empId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1